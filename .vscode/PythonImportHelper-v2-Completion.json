[
    {
        "label": "asyncio",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "asyncio",
        "description": "asyncio",
        "detail": "asyncio",
        "documentation": {}
    },
    {
        "label": "queue",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "queue",
        "description": "queue",
        "detail": "queue",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "Thread",
        "importPath": "threading",
        "description": "threading",
        "isExtraImport": true,
        "detail": "threading",
        "documentation": {}
    },
    {
        "label": "Event",
        "importPath": "threading",
        "description": "threading",
        "isExtraImport": true,
        "detail": "threading",
        "documentation": {}
    },
    {
        "label": "Thread",
        "importPath": "threading",
        "description": "threading",
        "isExtraImport": true,
        "detail": "threading",
        "documentation": {}
    },
    {
        "label": "Event",
        "importPath": "threading",
        "description": "threading",
        "isExtraImport": true,
        "detail": "threading",
        "documentation": {}
    },
    {
        "label": "BleakScanner",
        "importPath": "bleak",
        "description": "bleak",
        "isExtraImport": true,
        "detail": "bleak",
        "documentation": {}
    },
    {
        "label": "BleakClient",
        "importPath": "bleak",
        "description": "bleak",
        "isExtraImport": true,
        "detail": "bleak",
        "documentation": {}
    },
    {
        "label": "BleakClient",
        "importPath": "bleak",
        "description": "bleak",
        "isExtraImport": true,
        "detail": "bleak",
        "documentation": {}
    },
    {
        "label": "BleakClient",
        "importPath": "bleak",
        "description": "bleak",
        "isExtraImport": true,
        "detail": "bleak",
        "documentation": {}
    },
    {
        "label": "BleakClient",
        "importPath": "bleak",
        "description": "bleak",
        "isExtraImport": true,
        "detail": "bleak",
        "documentation": {}
    },
    {
        "label": "BleakScanner",
        "importPath": "bleak",
        "description": "bleak",
        "isExtraImport": true,
        "detail": "bleak",
        "documentation": {}
    },
    {
        "label": "BleakClient",
        "importPath": "bleak",
        "description": "bleak",
        "isExtraImport": true,
        "detail": "bleak",
        "documentation": {}
    },
    {
        "label": "BleakClient",
        "importPath": "bleak",
        "description": "bleak",
        "isExtraImport": true,
        "detail": "bleak",
        "documentation": {}
    },
    {
        "label": "BleakClient",
        "importPath": "bleak",
        "description": "bleak",
        "isExtraImport": true,
        "detail": "bleak",
        "documentation": {}
    },
    {
        "label": "platform",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "platform",
        "description": "platform",
        "detail": "platform",
        "documentation": {}
    },
    {
        "label": "Callable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Tuple",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Callable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Tuple",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Callable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Tuple",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Callable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "brp_pb2",
        "importPath": "proto",
        "description": "proto",
        "isExtraImport": true,
        "detail": "proto",
        "documentation": {}
    },
    {
        "label": "brp_pb2",
        "importPath": "proto",
        "description": "proto",
        "isExtraImport": true,
        "detail": "proto",
        "documentation": {}
    },
    {
        "label": "brp_pb2",
        "importPath": "proto",
        "description": "proto",
        "isExtraImport": true,
        "detail": "proto",
        "documentation": {}
    },
    {
        "label": "brp_pb2",
        "importPath": "proto",
        "description": "proto",
        "isExtraImport": true,
        "detail": "proto",
        "documentation": {}
    },
    {
        "label": "brp_pb2",
        "importPath": "proto",
        "description": "proto",
        "isExtraImport": true,
        "detail": "proto",
        "documentation": {}
    },
    {
        "label": "brp_pb2",
        "importPath": "proto",
        "description": "proto",
        "isExtraImport": true,
        "detail": "proto",
        "documentation": {}
    },
    {
        "label": "brp_pb2",
        "importPath": "proto",
        "description": "proto",
        "isExtraImport": true,
        "detail": "proto",
        "documentation": {}
    },
    {
        "label": "BleManager",
        "importPath": "ble.ble_manager",
        "description": "ble.ble_manager",
        "isExtraImport": true,
        "detail": "ble.ble_manager",
        "documentation": {}
    },
    {
        "label": "BleManager",
        "importPath": "ble.ble_manager",
        "description": "ble.ble_manager",
        "isExtraImport": true,
        "detail": "ble.ble_manager",
        "documentation": {}
    },
    {
        "label": "BleManager",
        "importPath": "ble.ble_manager",
        "description": "ble.ble_manager",
        "isExtraImport": true,
        "detail": "ble.ble_manager",
        "documentation": {}
    },
    {
        "label": "BleManager",
        "importPath": "ble.ble_manager",
        "description": "ble.ble_manager",
        "isExtraImport": true,
        "detail": "ble.ble_manager",
        "documentation": {}
    },
    {
        "label": "BleManager",
        "importPath": "ble.ble_manager",
        "description": "ble.ble_manager",
        "isExtraImport": true,
        "detail": "ble.ble_manager",
        "documentation": {}
    },
    {
        "label": "BleManager",
        "importPath": "ble.ble_manager",
        "description": "ble.ble_manager",
        "isExtraImport": true,
        "detail": "ble.ble_manager",
        "documentation": {}
    },
    {
        "label": "BleManager",
        "importPath": "ble.ble_manager",
        "description": "ble.ble_manager",
        "isExtraImport": true,
        "detail": "ble.ble_manager",
        "documentation": {}
    },
    {
        "label": "BleManager",
        "importPath": "ble.ble_manager",
        "description": "ble.ble_manager",
        "isExtraImport": true,
        "detail": "ble.ble_manager",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "BleConstant",
        "importPath": "ble.ble_constant",
        "description": "ble.ble_constant",
        "isExtraImport": true,
        "detail": "ble.ble_constant",
        "documentation": {}
    },
    {
        "label": "BleConstant",
        "importPath": "ble.ble_constant",
        "description": "ble.ble_constant",
        "isExtraImport": true,
        "detail": "ble.ble_constant",
        "documentation": {}
    },
    {
        "label": "BleConstant",
        "importPath": "ble.ble_constant",
        "description": "ble.ble_constant",
        "isExtraImport": true,
        "detail": "ble.ble_constant",
        "documentation": {}
    },
    {
        "label": "BleConstant",
        "importPath": "ble.ble_constant",
        "description": "ble.ble_constant",
        "isExtraImport": true,
        "detail": "ble.ble_constant",
        "documentation": {}
    },
    {
        "label": "BleConstant",
        "importPath": "ble.ble_constant",
        "description": "ble.ble_constant",
        "isExtraImport": true,
        "detail": "ble.ble_constant",
        "documentation": {}
    },
    {
        "label": "BleConstant",
        "importPath": "ble.ble_constant",
        "description": "ble.ble_constant",
        "isExtraImport": true,
        "detail": "ble.ble_constant",
        "documentation": {}
    },
    {
        "label": "BleConstant",
        "importPath": "ble.ble_constant",
        "description": "ble.ble_constant",
        "isExtraImport": true,
        "detail": "ble.ble_constant",
        "documentation": {}
    },
    {
        "label": "AccData",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "AccData",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "DeviceInfo",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "TempData",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "EcgData",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "PpgData",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "EcgData",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "PpgData",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "struct",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "struct",
        "description": "struct",
        "detail": "struct",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "NotifyDataType",
        "importPath": "core.enum.notify_data_type",
        "description": "core.enum.notify_data_type",
        "isExtraImport": true,
        "detail": "core.enum.notify_data_type",
        "documentation": {}
    },
    {
        "label": "BLEDevice",
        "importPath": "bleak.backends.device",
        "description": "bleak.backends.device",
        "isExtraImport": true,
        "detail": "bleak.backends.device",
        "documentation": {}
    },
    {
        "label": "BLEDevice",
        "importPath": "bleak.backends.device",
        "description": "bleak.backends.device",
        "isExtraImport": true,
        "detail": "bleak.backends.device",
        "documentation": {}
    },
    {
        "label": "BLEDevice",
        "importPath": "bleak.backends.device",
        "description": "bleak.backends.device",
        "isExtraImport": true,
        "detail": "bleak.backends.device",
        "documentation": {}
    },
    {
        "label": "AdvertisementData",
        "importPath": "bleak.backends.scanner",
        "description": "bleak.backends.scanner",
        "isExtraImport": true,
        "detail": "bleak.backends.scanner",
        "documentation": {}
    },
    {
        "label": "AdvertisementData",
        "importPath": "bleak.backends.scanner",
        "description": "bleak.backends.scanner",
        "isExtraImport": true,
        "detail": "bleak.backends.scanner",
        "documentation": {}
    },
    {
        "label": "AdvertisementData",
        "importPath": "bleak.backends.scanner",
        "description": "bleak.backends.scanner",
        "isExtraImport": true,
        "detail": "bleak.backends.scanner",
        "documentation": {}
    },
    {
        "label": "CoreHandlerCallBack",
        "importPath": "core.core_handler_call_back",
        "description": "core.core_handler_call_back",
        "isExtraImport": true,
        "detail": "core.core_handler_call_back",
        "documentation": {}
    },
    {
        "label": "CoreHandlerCallBack",
        "importPath": "core.core_handler_call_back",
        "description": "core.core_handler_call_back",
        "isExtraImport": true,
        "detail": "core.core_handler_call_back",
        "documentation": {}
    },
    {
        "label": "BleakGATTCharacteristic",
        "importPath": "bleak.backends.characteristic",
        "description": "bleak.backends.characteristic",
        "isExtraImport": true,
        "detail": "bleak.backends.characteristic",
        "documentation": {}
    },
    {
        "label": "logging",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "logging",
        "description": "logging",
        "detail": "logging",
        "documentation": {}
    },
    {
        "label": "proto.brp_protocol",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "proto.brp_protocol",
        "description": "proto.brp_protocol",
        "detail": "proto.brp_protocol",
        "documentation": {}
    },
    {
        "label": "TempDataHandler",
        "importPath": "core.handler",
        "description": "core.handler",
        "isExtraImport": true,
        "detail": "core.handler",
        "documentation": {}
    },
    {
        "label": "AccDataHandler",
        "importPath": "core.handler",
        "description": "core.handler",
        "isExtraImport": true,
        "detail": "core.handler",
        "documentation": {}
    },
    {
        "label": "AfeDataHandler",
        "importPath": "core.handler",
        "description": "core.handler",
        "isExtraImport": true,
        "detail": "core.handler",
        "documentation": {}
    },
    {
        "label": "GetDeviceInfoCommand",
        "importPath": "core.command",
        "description": "core.command",
        "isExtraImport": true,
        "detail": "core.command",
        "documentation": {}
    },
    {
        "label": "LiveAccDataCommand",
        "importPath": "core.command",
        "description": "core.command",
        "isExtraImport": true,
        "detail": "core.command",
        "documentation": {}
    },
    {
        "label": "LiveEcgDataCommand",
        "importPath": "core.command",
        "description": "core.command",
        "isExtraImport": true,
        "detail": "core.command",
        "documentation": {}
    },
    {
        "label": "LivePpgDataCommand",
        "importPath": "core.command",
        "description": "core.command",
        "isExtraImport": true,
        "detail": "core.command",
        "documentation": {}
    },
    {
        "label": "LiveTempDataCommand",
        "importPath": "core.command",
        "description": "core.command",
        "isExtraImport": true,
        "detail": "core.command",
        "documentation": {}
    },
    {
        "label": "GetDeviceInfoCommand",
        "importPath": "core.command",
        "description": "core.command",
        "isExtraImport": true,
        "detail": "core.command",
        "documentation": {}
    },
    {
        "label": "LiveAccDataCommand",
        "importPath": "core.command",
        "description": "core.command",
        "isExtraImport": true,
        "detail": "core.command",
        "documentation": {}
    },
    {
        "label": "LiveEcgDataCommand",
        "importPath": "core.command",
        "description": "core.command",
        "isExtraImport": true,
        "detail": "core.command",
        "documentation": {}
    },
    {
        "label": "LivePpgDataCommand",
        "importPath": "core.command",
        "description": "core.command",
        "isExtraImport": true,
        "detail": "core.command",
        "documentation": {}
    },
    {
        "label": "LiveTempDataCommand",
        "importPath": "core.command",
        "description": "core.command",
        "isExtraImport": true,
        "detail": "core.command",
        "documentation": {}
    },
    {
        "label": "ResDeviceInfoHandler",
        "importPath": "core.handler.sub.proto.response.res_device_info_handler",
        "description": "core.handler.sub.proto.response.res_device_info_handler",
        "isExtraImport": true,
        "detail": "core.handler.sub.proto.response.res_device_info_handler",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "DeviceInfo",
        "importPath": "core.models.device_info",
        "description": "core.models.device_info",
        "isExtraImport": true,
        "detail": "core.models.device_info",
        "documentation": {}
    },
    {
        "label": "DeviceInfo",
        "importPath": "core.models.device_info",
        "description": "core.models.device_info",
        "isExtraImport": true,
        "detail": "core.models.device_info",
        "documentation": {}
    },
    {
        "label": "AccData",
        "importPath": "core.models.acc_data",
        "description": "core.models.acc_data",
        "isExtraImport": true,
        "detail": "core.models.acc_data",
        "documentation": {}
    },
    {
        "label": "AccData",
        "importPath": "core.models.acc_data",
        "description": "core.models.acc_data",
        "isExtraImport": true,
        "detail": "core.models.acc_data",
        "documentation": {}
    },
    {
        "label": "builder",
        "importPath": "google.protobuf.internal",
        "description": "google.protobuf.internal",
        "isExtraImport": true,
        "detail": "google.protobuf.internal",
        "documentation": {}
    },
    {
        "label": "descriptor",
        "importPath": "google.protobuf",
        "description": "google.protobuf",
        "isExtraImport": true,
        "detail": "google.protobuf",
        "documentation": {}
    },
    {
        "label": "descriptor_pool",
        "importPath": "google.protobuf",
        "description": "google.protobuf",
        "isExtraImport": true,
        "detail": "google.protobuf",
        "documentation": {}
    },
    {
        "label": "symbol_database",
        "importPath": "google.protobuf",
        "description": "google.protobuf",
        "isExtraImport": true,
        "detail": "google.protobuf",
        "documentation": {}
    },
    {
        "label": "proto.brp_pb2",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "proto.brp_pb2",
        "description": "proto.brp_pb2",
        "detail": "proto.brp_pb2",
        "documentation": {}
    },
    {
        "label": "QApplication",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QApplication",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QApplication",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMainWindow",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PyQt6.QtWidgets",
        "description": "PyQt6.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QTGuideWindow",
        "importPath": "qt_gui",
        "description": "qt_gui",
        "isExtraImport": true,
        "detail": "qt_gui",
        "documentation": {}
    },
    {
        "label": "QTGuideWindow",
        "importPath": "qt_gui",
        "description": "qt_gui",
        "isExtraImport": true,
        "detail": "qt_gui",
        "documentation": {}
    },
    {
        "label": "CoreHandler",
        "importPath": "core.core_handler",
        "description": "core.core_handler",
        "isExtraImport": true,
        "detail": "core.core_handler",
        "documentation": {}
    },
    {
        "label": "BioRingTool",
        "importPath": "bioring_tool",
        "description": "bioring_tool",
        "isExtraImport": true,
        "detail": "bioring_tool",
        "documentation": {}
    },
    {
        "label": "BleConstant",
        "kind": 6,
        "importPath": "ble.ble_constant",
        "description": "ble.ble_constant",
        "peekOfCode": "class BleConstant:\n    BRS_UUID_SERVICE = \"6e400000-b5a3-f393-e0a9-e50e24dcca9e\"\n    BRS_UUID_CHAR_TX = \"6e400001-b5a3-f393-e0a9-e50e24dcca9e\"\n    BRS_UUID_CHAR_RX = \"6e400002-b5a3-f393-e0a9-e50e24dcca9e\"\n    BRS_UUID_CHAR_DATA = \"6e400003-b5a3-f393-e0a9-e50e24dcca9e\"\n    BIORING_PREFIX = \"BioRing\"\n    BIORING_DFU_PREFIX = \"[DFU] BioRing\"\n    CCC_BITS_UUID = \"00002902-0000-1000-8000-00805f9b34fb\"",
        "detail": "ble.ble_constant",
        "documentation": {}
    },
    {
        "label": "BLEConnectionStatus",
        "kind": 6,
        "importPath": "ble.ble_manager",
        "description": "ble.ble_manager",
        "peekOfCode": "class BLEConnectionStatus(Enum):\n    INIT = 0\n    CONNECTING = 1\n    CONNECTED = 2\n    DISCONNECTED = 3\nclass BLEEvent(Enum):\n    BLE_EVENT_DISCONNECT = 0\n    BLE_EVENT_START_NOTIFY = 1\n    BLE_EVENT_STOP_NOTIFY = 2\n    BLE_EVENT_WRITE = 3",
        "detail": "ble.ble_manager",
        "documentation": {}
    },
    {
        "label": "BLEEvent",
        "kind": 6,
        "importPath": "ble.ble_manager",
        "description": "ble.ble_manager",
        "peekOfCode": "class BLEEvent(Enum):\n    BLE_EVENT_DISCONNECT = 0\n    BLE_EVENT_START_NOTIFY = 1\n    BLE_EVENT_STOP_NOTIFY = 2\n    BLE_EVENT_WRITE = 3\nclass BleManager:\n    def __init__(self, debug=False):\n        self.debug = debug\n        self.device_addr = \"\"\n        self.event_queue = queue.Queue()",
        "detail": "ble.ble_manager",
        "documentation": {}
    },
    {
        "label": "BleManager",
        "kind": 6,
        "importPath": "ble.ble_manager",
        "description": "ble.ble_manager",
        "peekOfCode": "class BleManager:\n    def __init__(self, debug=False):\n        self.debug = debug\n        self.device_addr = \"\"\n        self.event_queue = queue.Queue()\n        self.conn_status = BLEConnectionStatus.INIT\n        self.conn_timeout = False\n        if platform.system() == \"Darwin\":  # macOS\n            self.use_bdaddr = False\n        elif platform.system() == \"Windows\":  # Windows",
        "detail": "ble.ble_manager",
        "documentation": {}
    },
    {
        "label": "OnDeviceConnected",
        "kind": 5,
        "importPath": "ble.ble_manager",
        "description": "ble.ble_manager",
        "peekOfCode": "OnDeviceConnected = Callable[[BleakClient], None]\nclass BLEConnectionStatus(Enum):\n    INIT = 0\n    CONNECTING = 1\n    CONNECTED = 2\n    DISCONNECTED = 3\nclass BLEEvent(Enum):\n    BLE_EVENT_DISCONNECT = 0\n    BLE_EVENT_START_NOTIFY = 1\n    BLE_EVENT_STOP_NOTIFY = 2",
        "detail": "ble.ble_manager",
        "documentation": {}
    },
    {
        "label": "GetDeviceInfoCommand",
        "kind": 6,
        "importPath": "core.command.get_device_info_command",
        "description": "core.command.get_device_info_command",
        "peekOfCode": "class GetDeviceInfoCommand:\n    @staticmethod\n    def send(ble_manager: BleManager):\n        pkt = brp.Packet()\n        pkt.sid = int(time.time() * 1000)\n        pkt.type = brp.PacketType.PACKET_TYPE_COMMAND\n        pkt.command.cid = brp.CommandId.CID_DEV_INFO_GET\n        pkt_value = pkt.SerializeToString()\n        ble_manager.write(BleConstant.BRS_UUID_CHAR_TX, pkt_value)",
        "detail": "core.command.get_device_info_command",
        "documentation": {}
    },
    {
        "label": "LiveAccDataCommand",
        "kind": 6,
        "importPath": "core.command.live_acc_data_command",
        "description": "core.command.live_acc_data_command",
        "peekOfCode": "class LiveAccDataCommand:\n    @staticmethod\n    def send(isStart: bool, ble_manager: BleManager):\n        pkt = brp.Packet()\n        pkt.sid = int(time.time() * 1000)\n        pkt.type = brp.PacketType.PACKET_TYPE_COMMAND\n        if isStart:\n            pkt.command.cid = brp.CommandId.CID_STREAMING_DATA_START\n        else:\n            pkt.command.cid = brp.CommandId.CID_STREAMING_DATA_STOP",
        "detail": "core.command.live_acc_data_command",
        "documentation": {}
    },
    {
        "label": "LiveEcgDataCommand",
        "kind": 6,
        "importPath": "core.command.live_ecg_data_command",
        "description": "core.command.live_ecg_data_command",
        "peekOfCode": "class LiveEcgDataCommand:\n    @staticmethod\n    def send(isStart: bool, ble_manager: BleManager):\n        pkt = brp.Packet()\n        pkt.sid = int(time.time() * 1000)\n        pkt.command.sensor_type = brp.SensorType.SENSOR_TYPE_ECG\n        if isStart:\n            pkt.command.cid = brp.CommandId.CID_STREAMING_DATA_START\n        else:\n            pkt.command.cid = brp.CommandId.CID_STREAMING_DATA_STOP",
        "detail": "core.command.live_ecg_data_command",
        "documentation": {}
    },
    {
        "label": "LivePpgDataCommand",
        "kind": 6,
        "importPath": "core.command.live_ppg_data_command",
        "description": "core.command.live_ppg_data_command",
        "peekOfCode": "class LivePpgDataCommand:\n    @staticmethod\n    def send(isStart: bool, ble_manager: BleManager):\n        pkt = brp.Packet()\n        pkt.sid = int(time.time() * 1000)\n        pkt.command.sensor_type = brp.SensorType.SENSOR_TYPE_PPG\n        if isStart:\n            pkt.command.cid = brp.CommandId.CID_STREAMING_DATA_START\n        else:\n            pkt.command.cid = brp.CommandId.CID_STREAMING_DATA_STOP",
        "detail": "core.command.live_ppg_data_command",
        "documentation": {}
    },
    {
        "label": "LiveTempDataCommand",
        "kind": 6,
        "importPath": "core.command.live_temp_data_command",
        "description": "core.command.live_temp_data_command",
        "peekOfCode": "class LiveTempDataCommand:\n    @staticmethod\n    def send(isStart: bool, ble_manager: BleManager):\n        pkt = brp.Packet()\n        pkt.sid = int(time.time() * 1000)\n        pkt.command.sensor_type = brp.SensorType.SENSOR_TYPE_TEMP\n        if isStart:\n            pkt.command.cid = brp.CommandId.CID_STREAMING_DATA_START\n        else:\n            pkt.command.cid = brp.CommandId.CID_STREAMING_DATA_STOP",
        "detail": "core.command.live_temp_data_command",
        "documentation": {}
    },
    {
        "label": "NotifyDataType",
        "kind": 6,
        "importPath": "core.enum.notify_data_type",
        "description": "core.enum.notify_data_type",
        "peekOfCode": "class NotifyDataType(Enum):\n    AFE = 0xA0\n    IMU = 0xA1\n    TEMP = 0xA2\n    @staticmethod\n    def get(value: int):\n        # Iterate over the enum members and return the one matching the value\n        for cmd in NotifyDataType:\n            if cmd.value == value:\n                return cmd",
        "detail": "core.enum.notify_data_type",
        "documentation": {}
    },
    {
        "label": "AccDataHandler",
        "kind": 6,
        "importPath": "core.handler.sub.acc.acc_data_handler",
        "description": "core.handler.sub.acc.acc_data_handler",
        "peekOfCode": "class AccDataHandler:\n    @staticmethod\n    def parse(data: bytearray, length: int) -> AccData:\n        num_samples = int(length / 2)\n        imu_data = struct.unpack(f\"<{num_samples}h\", data)\n        for i in range(0, num_samples, 3):\n            raw_x = imu_data[i]\n            raw_y = imu_data[i + 1]\n            raw_z = imu_data[i + 2]\n        return AccData(raw_x, raw_y, raw_z)",
        "detail": "core.handler.sub.acc.acc_data_handler",
        "documentation": {}
    },
    {
        "label": "AfeDataHandler",
        "kind": 6,
        "importPath": "core.handler.sub.afe.afe_data_handler",
        "description": "core.handler.sub.afe.afe_data_handler",
        "peekOfCode": "class AfeDataHandler:\n    @staticmethod\n    def handle(data: bytearray) -> AccData:\n        return AfeDataHandler._parse(data)\n    @staticmethod\n    def _parse(data: bytearray) -> AccData:\n        pass",
        "detail": "core.handler.sub.afe.afe_data_handler",
        "documentation": {}
    },
    {
        "label": "NotiDeviceInfoHandler",
        "kind": 6,
        "importPath": "core.handler.sub.proto.notification.device_info.noti_device_info_handler",
        "description": "core.handler.sub.proto.notification.device_info.noti_device_info_handler",
        "peekOfCode": "class NotiDeviceInfoHandler:\n    @staticmethod\n    def handle():\n        cid = 1",
        "detail": "core.handler.sub.proto.notification.device_info.noti_device_info_handler",
        "documentation": {}
    },
    {
        "label": "ProtoNotificationHandler",
        "kind": 6,
        "importPath": "core.handler.sub.proto.notification.ptoto_notification_handler",
        "description": "core.handler.sub.proto.notification.ptoto_notification_handler",
        "peekOfCode": "class ProtoNotificationHandler:\n    @staticmethod\n    def handle():\n        cid = 1",
        "detail": "core.handler.sub.proto.notification.ptoto_notification_handler",
        "documentation": {}
    },
    {
        "label": "ProtoResponseHandler",
        "kind": 6,
        "importPath": "core.handler.sub.proto.response.proto_response_handler",
        "description": "core.handler.sub.proto.response.proto_response_handler",
        "peekOfCode": "class ProtoResponseHandler:\n    @staticmethod\n    def handle():\n        cid = 1",
        "detail": "core.handler.sub.proto.response.proto_response_handler",
        "documentation": {}
    },
    {
        "label": "ResDeviceInfoHandler",
        "kind": 6,
        "importPath": "core.handler.sub.proto.response.res_device_info_handler",
        "description": "core.handler.sub.proto.response.res_device_info_handler",
        "peekOfCode": "class ResDeviceInfoHandler:\n    @staticmethod\n    def parse(packet: brp.Packet) -> DeviceInfo:\n        return DeviceInfo(\n            hw_version=packet.response.dev_info.hardware_version,\n            fw_version=packet.response.dev_info.firmware_version,\n            serial_number=packet.response.dev_info.serial_number,\n            model=packet.response.dev_info.model,\n        )",
        "detail": "core.handler.sub.proto.response.res_device_info_handler",
        "documentation": {}
    },
    {
        "label": "TempDataHandler",
        "kind": 6,
        "importPath": "core.handler.sub.temp.temp_data_handler",
        "description": "core.handler.sub.temp.temp_data_handler",
        "peekOfCode": "class TempDataHandler:\n    @staticmethod\n    def parse(data: bytearray) -> TempData:\n        num_samples = 1\n        temp_data = struct.unpack(f\"<{num_samples}f\", data)\n        return temp_data[0]",
        "detail": "core.handler.sub.temp.temp_data_handler",
        "documentation": {}
    },
    {
        "label": "ProtoDataHandler",
        "kind": 6,
        "importPath": "core.handler.sub.proto_data_handler",
        "description": "core.handler.sub.proto_data_handler",
        "peekOfCode": "class ProtoDataHandler:\n    @staticmethod\n    def handle():\n        cid = 1",
        "detail": "core.handler.sub.proto_data_handler",
        "documentation": {}
    },
    {
        "label": "StreamDataHandler",
        "kind": 6,
        "importPath": "core.handler.sub.stream_data_handler",
        "description": "core.handler.sub.stream_data_handler",
        "peekOfCode": "class StreamDataHandler:\n    @staticmethod\n    def handle():\n        cid = 1",
        "detail": "core.handler.sub.stream_data_handler",
        "documentation": {}
    },
    {
        "label": "AccData",
        "kind": 6,
        "importPath": "core.models.acc_data",
        "description": "core.models.acc_data",
        "peekOfCode": "class AccData:\n    x: List[int]\n    y: List[int]\n    z: List[int]",
        "detail": "core.models.acc_data",
        "documentation": {}
    },
    {
        "label": "DeviceInfo",
        "kind": 6,
        "importPath": "core.models.device_info",
        "description": "core.models.device_info",
        "peekOfCode": "class DeviceInfo:\n    hw_version: str\n    fw_version: str\n    serial_number: str\n    model: str",
        "detail": "core.models.device_info",
        "documentation": {}
    },
    {
        "label": "EcgData",
        "kind": 6,
        "importPath": "core.models.ecg_data",
        "description": "core.models.ecg_data",
        "peekOfCode": "class EcgData:\n    data: List[int]",
        "detail": "core.models.ecg_data",
        "documentation": {}
    },
    {
        "label": "Packet",
        "kind": 6,
        "importPath": "core.models.packet",
        "description": "core.models.packet",
        "peekOfCode": "class Packet:\n    type: NotifyDataType\n    data: bytearray",
        "detail": "core.models.packet",
        "documentation": {}
    },
    {
        "label": "PpgData",
        "kind": 6,
        "importPath": "core.models.ppg_data",
        "description": "core.models.ppg_data",
        "peekOfCode": "class PpgData:\n    red: List[int]\n    ir: List[int]",
        "detail": "core.models.ppg_data",
        "documentation": {}
    },
    {
        "label": "TempData",
        "kind": 6,
        "importPath": "core.models.temp_data",
        "description": "core.models.temp_data",
        "peekOfCode": "class TempData:\n    value: List[float]",
        "detail": "core.models.temp_data",
        "documentation": {}
    },
    {
        "label": "CoreHandler",
        "kind": 6,
        "importPath": "core.core_handler",
        "description": "core.core_handler",
        "peekOfCode": "class CoreHandler:\n    _instance = None\n    def __new__(cls, *args, **kwargs):\n        if cls._instance is None:\n            cls._instance = super(CoreHandler, cls).__new__(cls)\n        return cls._instance\n    def __init__(self, core_handler_call_back: CoreHandlerCallBack):\n        self.core_handler_call_back = core_handler_call_back\n        self.ble_manager = BleManager()\n        self.devices: List[Tuple[BLEDevice, AdvertisementData]] = []",
        "detail": "core.core_handler",
        "documentation": {}
    },
    {
        "label": "CoreHandlerCallBack",
        "kind": 6,
        "importPath": "core.core_handler_call_back",
        "description": "core.core_handler_call_back",
        "peekOfCode": "class CoreHandlerCallBack(ABC):\n    # Listener - BLE\n    @abstractmethod\n    def on_device_found():\n        pass\n    @abstractmethod\n    def on_device_connected(device: BleakClient):\n        pass\n    @abstractmethod\n    def on_device_disconnected(device: BleakClient):",
        "detail": "core.core_handler_call_back",
        "documentation": {}
    },
    {
        "label": "_sym_db",
        "kind": 5,
        "importPath": "proto.brp_pb2",
        "description": "proto.brp_pb2",
        "peekOfCode": "_sym_db = _symbol_database.Default()\nDESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\\n\\tbrp.proto\\x12\\x03\\x42RP\\\")\\n\\x0cProtocolInfo\\x12\\x19\\n\\x07version\\x18\\x01 \\x02(\\x05:\\x08\\x32\\x30\\x32\\x34\\x30\\x35\\x32\\x37\\\"\\xdf\\x01\\n\\x06Packet\\x12\\x0b\\n\\x03sid\\x18\\x01 \\x02(\\x04\\x12\\x1d\\n\\x04type\\x18\\x02 \\x02(\\x0e\\x32\\x0f.BRP.PacketType\\x12%\\n\\x07\\x63ommand\\x18\\x03 \\x01(\\x0b\\x32\\x12.BRP.CommandPacketH\\x00\\x12\\'\\n\\x08response\\x18\\x04 \\x01(\\x0b\\x32\\x13.BRP.ResponsePacketH\\x00\\x12/\\n\\x0cnotification\\x18\\x05 \\x01(\\x0b\\x32\\x17.BRP.NotificationPacketH\\x00\\x12\\x1d\\n\\x03\\x61\\x63k\\x18\\x06 \\x01(\\x0b\\x32\\x0e.BRP.AckPacketH\\x00\\x42\\t\\n\\x07payload\\\"\\xc3\\x02\\n\\rCommandPacket\\x12\\x1b\\n\\x03\\x63id\\x18\\x01 \\x02(\\x0e\\x32\\x0e.BRP.CommandId\\x12!\\n\\x07mem_set\\x18\\x02 \\x01(\\x0b\\x32\\x0e.BRP.CmdMemSetH\\x00\\x12!\\n\\x07mem_get\\x18\\x03 \\x01(\\x0b\\x32\\x0e.BRP.CmdMemGetH\\x00\\x12\\'\\n\\x0b\\x61\\x66\\x65_setting\\x18\\x04 \\x01(\\x0b\\x32\\x10.BRP.AfeSettingsH\\x00\\x12+\\n\\x0ewlc_run_params\\x18\\x05 \\x01(\\x0b\\x32\\x11.BRP.WlcRunParamsH\\x00\\x12+\\n\\x0ewlc_oem_params\\x18\\x06 \\x01(\\x0b\\x32\\x11.BRP.WlcOemParamsH\\x00\\x12\\x15\\n\\x0bsensor_type\\x18\\x07 \\x01(\\rH\\x00\\x12*\\n\\rsensor_config\\x18\\x08 \\x01(\\x0b\\x32\\x11.BRP.SensorConfigH\\x00\\x42\\t\\n\\x07payload\\\"\\xcf\\x02\\n\\x0eResponsePacket\\x12\\x1b\\n\\x03\\x63id\\x18\\x01 \\x02(\\x0e\\x32\\x0e.BRP.CommandId\\x12!\\n\\x06result\\x18\\x02 \\x02(\\x0e\\x32\\x11.BRP.ResponseCode\\x12*\\n\\rprotocol_info\\x18\\x04 \\x01(\\x0b\\x32\\x11.BRP.ProtocolInfoH\\x00\\x12!\\n\\x07mem_get\\x18\\x05 \\x01(\\x0b\\x32\\x0e.BRP.RspMemGetH\\x00\\x12 \\n\\x08\\x64\\x65v_info\\x18\\x06 \\x01(\\x0b\\x32\\x0c.BRP.DevInfoH\\x00\\x12\\'\\n\\x0b\\x61\\x66\\x65_setting\\x18\\x07 \\x01(\\x0b\\x32\\x10.BRP.AfeSettingsH\\x00\\x12+\\n\\x0ewlc_run_params\\x18\\x08 \\x01(\\x0b\\x32\\x11.BRP.WlcRunParamsH\\x00\\x12+\\n\\x0ewlc_oem_params\\x18\\t \\x01(\\x0b\\x32\\x11.BRP.WlcOemParamsH\\x00\\x42\\t\\n\\x07payload\\\"\\xbc\\x01\\n\\x12NotificationPacket\\x12 \\n\\x03nid\\x18\\x02 \\x02(\\x0e\\x32\\x13.BRP.NotificationId\\x12\\x0b\\n\\x03\\x61\\x63k\\x18\\x03 \\x02(\\x08\\x12\\x1b\\n\\x03log\\x18\\x04 \\x01(\\x0b\\x32\\x0c.BRP.NotiLogH\\x00\\x12\\x12\\n\\x08\\x63harging\\x18\\x05 \\x01(\\x08H\\x00\\x12\\x17\\n\\rbattery_level\\x18\\x06 \\x01(\\rH\\x00\\x12\\\"\\n\\x07spo2_hr\\x18\\x07 \\x01(\\x0b\\x32\\x0f.BRP.Spo2HrDataH\\x00\\x42\\t\\n\\x07payload\\\"S\\n\\tAckPacket\\x12 \\n\\x03nid\\x18\\x01 \\x02(\\x0e\\x32\\x13.BRP.NotificationId\\x12$\\n\\x06result\\x18\\x02 \\x02(\\x0e\\x32\\x14.BRP.AckResponseCode\\\"c\\n\\x07\\x44\\x65vInfo\\x12\\x15\\n\\rserial_number\\x18\\x01 \\x02(\\t\\x12\\x18\\n\\x10hardware_version\\x18\\x02 \\x02(\\t\\x12\\x18\\n\\x10\\x66irmware_version\\x18\\x03 \\x02(\\t\\x12\\r\\n\\x05model\\x18\\x04 \\x01(\\t\\\":\\n\\tCmdMemSet\\x12\\x0f\\n\\x07\\x61\\x64\\x64ress\\x18\\x01 \\x02(\\r\\x12\\x0e\\n\\x06length\\x18\\x02 \\x02(\\r\\x12\\x0c\\n\\x04\\x64\\x61ta\\x18\\x03 \\x02(\\x0c\\\",\\n\\tCmdMemGet\\x12\\x0f\\n\\x07\\x61\\x64\\x64ress\\x18\\x01 \\x02(\\r\\x12\\x0e\\n\\x06length\\x18\\x02 \\x02(\\r\\\"\\x19\\n\\tRspMemGet\\x12\\x0c\\n\\x04\\x64\\x61ta\\x18\\x01 \\x02(\\x0c\\\"\\x17\\n\\x07NotiLog\\x12\\x0c\\n\\x04\\x64\\x61ta\\x18\\x01 \\x01(\\x0c\\\"\\xb7\\t\\n\\x0b\\x41\\x66\\x65Settings\\x12\\x17\\n\\x0f\\x65\\x63g_sample_rate\\x18\\x01 \\x02(\\r\\x12\\x17\\n\\x0fppg_sample_rate\\x18\\x02 \\x02(\\r\\x12\\x1e\\n\\x16ppg_meas1_current_step\\x18\\x03 \\x02(\\r\\x12\\x1e\\n\\x16ppg_meas2_current_step\\x18\\x04 \\x02(\\r\\x12\\x19\\n\\x11ppg_meas1_current\\x18\\x05 \\x02(\\x02\\x12\\x19\\n\\x11ppg_meas2_current\\x18\\x06 \\x02(\\x02\\x12\\x17\\n\\x0f\\x65\\x63g_input_polar\\x18\\x07 \\x02(\\r\\x12\\x14\\n\\x0c\\x65\\x63g_pga_gain\\x18\\x08 \\x02(\\r\\x12\\x14\\n\\x0c\\x65\\x63g_ina_gain\\x18\\t \\x02(\\r\\x12\\x1a\\n\\x12\\x65\\x63g_auto_reco_mode\\x18\\n \\x02(\\r\\x12\\x1f\\n\\x17\\x65\\x63g_auto_fast_reco_mode\\x18\\x0b \\x02(\\r\\x12!\\n\\x19\\x65\\x63g_auto_fast_reco_thresh\\x18\\x0c \\x02(\\r\\x12\\x16\\n\\x0e\\x65\\x63g_rld_enable\\x18\\r \\x02(\\r\\x12\\x14\\n\\x0c\\x65\\x63g_rld_mode\\x18\\x0e \\x02(\\r\\x12 \\n\\x18\\x65\\x63g_rld_pos_input_enable\\x18\\x0f \\x02(\\r\\x12 \\n\\x18\\x65\\x63g_rld_neg_input_enable\\x18\\x10 \\x02(\\r\\x12\\x14\\n\\x0c\\x65\\x63g_rld_gain\\x18\\x11 \\x02(\\r\\x12\\x1e\\n\\x16\\x65\\x63g_rld_ex_res_connect\\x18\\x12 \\x02(\\r\\x12\\x1a\\n\\x12\\x65\\x63g_rld_select_ecg\\x18\\x13 \\x02(\\r\\x12\\x1c\\n\\x14ppg_meas1_inter_time\\x18\\x14 \\x02(\\r\\x12\\x1c\\n\\x14ppg_meas2_inter_time\\x18\\x15 \\x02(\\r\\x12\\x1d\\n\\x15ppg_meas1_pd_seltling\\x18\\x16 \\x02(\\r\\x12\\x1d\\n\\x15ppg_meas2_pd_seltling\\x18\\x17 \\x02(\\r\\x12\\x1e\\n\\x16ppg_meas1_led_seltling\\x18\\x18 \\x02(\\r\\x12\\x1e\\n\\x16ppg_meas2_led_seltling\\x18\\x19 \\x02(\\r\\x12\\x1d\\n\\x15ppg_meas1_ppg1_offset\\x18\\x1a \\x02(\\r\\x12\\x1d\\n\\x15ppg_meas2_ppg1_offset\\x18\\x1b \\x02(\\r\\x12\\x1d\\n\\x15ppg_meas1_ppg2_offset\\x18\\x1c \\x02(\\r\\x12\\x1d\\n\\x15ppg_meas2_ppg2_offset\\x18\\x1d \\x02(\\r\\x12\\x1e\\n\\x16ppg_meas1_sinc3_filter\\x18\\x1e \\x02(\\r\\x12\\x1e\\n\\x16ppg_meas2_sinc3_filter\\x18\\x1f \\x02(\\r\\x12\\x1c\\n\\x14ppg_meas1_alc_method\\x18  \\x02(\\r\\x12\\x1c\\n\\x14ppg_meas2_alc_method\\x18! \\x02(\\r\\x12\\x1e\\n\\x16ppg_meas1_filter_order\\x18\\\" \\x02(\\r\\x12\\x1e\\n\\x16ppg_meas2_filter_order\\x18# \\x02(\\r\\x12\\x19\\n\\x11ppg_meas1_ambient\\x18$ \\x02(\\r\\x12\\x19\\n\\x11ppg_meas2_ambient\\x18% \\x02(\\r\\x12\\x1f\\n\\x17ppg_pd1_photodiode_bias\\x18& \\x02(\\r\\x12\\x1a\\n\\x12ppg_proximity_mode\\x18\\' \\x02(\\r\\x12\\x1d\\n\\x15ppg_threshold_1_lower\\x18( \\x02(\\r\\x12\\x13\\n\\x0b\\x65\\x63g_ina_rge\\x18) \\x02(\\r\\\"\\xc8\\x01\\n\\x0cWlcRunParams\\x12\\x16\\n\\x0e\\x63harge_current\\x18\\x01 \\x02(\\r\\x12\\x18\\n\\x10recharge_voltage\\x18\\x02 \\x02(\\r\\x12\\x1b\\n\\x13termination_voltage\\x18\\x03 \\x02(\\r\\x12\\x17\\n\\x0ftrickle_voltage\\x18\\x04 \\x02(\\r\\x12\\x17\\n\\x0f\\x65nable_charging\\x18\\x05 \\x02(\\r\\x12\\x0f\\n\\x07wpt_req\\x18\\x06 \\x02(\\r\\x12\\x14\\n\\x0cwpt_duration\\x18\\x07 \\x02(\\r\\x12\\x10\\n\\x08\\x64\\x65tuning\\x18\\x08 \\x02(\\r\\\"\\xd0\\x07\\n\\x0cWlcOemParams\\x12\\x18\\n\\x10\\x62\\x63_i_charge_cold\\x18\\x01 \\x02(\\r\\x12\\x17\\n\\x0f\\x62\\x63_i_charge_hot\\x18\\x02 \\x02(\\r\\x12\\x11\\n\\tbc_v_term\\x18\\x03 \\x02(\\r\\x12\\x16\\n\\x0e\\x62\\x63_v_term_cold\\x18\\x04 \\x02(\\r\\x12\\x15\\n\\rbc_v_term_hot\\x18\\x05 \\x02(\\r\\x12\\x14\\n\\x0c\\x62\\x63_v_trickle\\x18\\x06 \\x02(\\r\\x12\\x15\\n\\rbc_v_recharge\\x18\\x07 \\x02(\\r\\x12\\x13\\n\\x0bvd_mcu_mode\\x18\\x08 \\x02(\\r\\x12\\x17\\n\\x0fi_sensor_thresh\\x18\\t \\x02(\\r\\x12\\x1c\\n\\x14\\x61\\x64j_wpt_duration_int\\x18\\n \\x02(\\r\\x12\\x1c\\n\\x14tcm_wpt_duration_int\\x18\\x0b \\x02(\\r\\x12\\x1c\\n\\x14\\x63\\x63m_wpt_duration_int\\x18\\x0c \\x02(\\r\\x12\\x1c\\n\\x14\\x63vm_wpt_duration_int\\x18\\r \\x02(\\r\\x12\\x12\\n\\ncap_wt_int\\x18\\x0e \\x02(\\r\\x12\\x14\\n\\x0cgpio0_config\\x18\\x0f \\x02(\\r\\x12\\x14\\n\\x0cgpio1_config\\x18\\x10 \\x02(\\r\\x12\\x16\\n\\x0e\\x62\\x63_uvlo_thresh\\x18\\x11 \\x02(\\r\\x12\\x13\\n\\x0bwpt_req_sel\\x18\\x12 \\x02(\\r\\x12\\x14\\n\\x0cirq_polarity\\x18\\x13 \\x02(\\r\\x12\\x19\\n\\x11nfc_resistive_mod\\x18\\x14 \\x02(\\r\\x12\\x19\\n\\x11nfc_resistive_set\\x18\\x15 \\x02(\\r\\x12\\x19\\n\\x11wpt_resistive_mod\\x18\\x16 \\x02(\\r\\x12\\x19\\n\\x11wpt_resistive_set\\x18\\x17 \\x02(\\r\\x12\\x10\\n\\x08ntc_mode\\x18\\x18 \\x02(\\r\\x12\\x17\\n\\x0f\\x62\\x63_i_charge_wpt\\x18\\x19 \\x02(\\r\\x12\\x17\\n\\x0f\\x62\\x63_i_charge_nfc\\x18\\x1a \\x02(\\r\\x12\\x11\\n\\tbc_i_term\\x18\\x1b \\x02(\\r\\x12\\x14\\n\\x0c\\x62\\x63_i_lim_sel\\x18\\x1c \\x02(\\r\\x12\\x1b\\n\\x13\\x62\\x63_i_lim_bat_enable\\x18\\x1d \\x02(\\r\\x12\\x18\\n\\x10\\x62\\x63_lo_bat_off_en\\x18\\x1e \\x02(\\r\\x12\\x11\\n\\tbc_enable\\x18\\x1f \\x02(\\r\\x12\\x13\\n\\x0bi2c_address\\x18  \\x02(\\r\\x12\\x13\\n\\x0btcm_timeout\\x18! \\x02(\\r\\x12\\x13\\n\\x0b\\x63\\x63m_timeout\\x18\\\" \\x02(\\r\\x12\\x13\\n\\x0b\\x63vm_timeout\\x18# \\x02(\\r\\x12\\x16\\n\\x0evddc_thres_low\\x18$ \\x02(\\r\\x12\\x1a\\n\\x12vd_bat_offset_high\\x18% \\x02(\\r\\x12\\x19\\n\\x11vd_bat_offset_low\\x18& \\x02(\\r\\x12\\x1a\\n\\x12\\x64\\x63_charging_enable\\x18\\' \\x02(\\r\\x12\\x13\\n\\x0boem_version\\x18( \\x02(\\r\\\"S\\n\\x0cSensorConfig\\x12$\\n\\x0bsensor_type\\x18\\x01 \\x01(\\x0e\\x32\\x0f.BRP.SensorType\\x12\\x1d\\n\\x04mode\\x18\\x02 \\x01(\\x0e\\x32\\x0f.BRP.SensorMode\\\".\\n\\nSpo2HrData\\x12\\x10\\n\\x04spo2\\x18\\x01 \\x03(\\rB\\x02\\x10\\x01\\x12\\x0e\\n\\x02hr\\x18\\x02 \\x03(\\rB\\x02\\x10\\x01*\\x8f\\x01\\n\\nPacketType\\x12\\x1b\\n\\x17PACKET_TYPE_UNSPECIFIED\\x10\\x00\\x12\\x17\\n\\x13PACKET_TYPE_COMMAND\\x10\\x01\\x12\\x18\\n\\x14PACKET_TYPE_RESPONSE\\x10\\x02\\x12\\x1c\\n\\x18PACKET_TYPE_NOTIFICATION\\x10\\x03\\x12\\x13\\n\\x0fPACKET_TYPE_ACK\\x10\\x04*a\\n\\nSensorType\\x12\\x13\\n\\x0fSENSOR_TYPE_PPG\\x10\\x01\\x12\\x13\\n\\x0fSENSOR_TYPE_ECG\\x10\\x02\\x12\\x13\\n\\x0fSENSOR_TYPE_IMU\\x10\\x04\\x12\\x14\\n\\x10SENSOR_TYPE_TEMP\\x10\\x08*\\xef\\x06\\n\\tCommandId\\x12\\x13\\n\\x0f\\x43ID_UNSPECIFIED\\x10\\x00\\x12\\x19\\n\\x15\\x43ID_PROTOCOL_INFO_GET\\x10\\x01\\x12\\x0f\\n\\x0b\\x43ID_MEM_SET\\x10\\x02\\x12\\x0f\\n\\x0b\\x43ID_MEM_GET\\x10\\x03\\x12\\x0e\\n\\nCID_REBOOT\\x10\\x04\\x12\\x10\\n\\x0c\\x43ID_TIME_SET\\x10\\x05\\x12\\x10\\n\\x0c\\x43ID_TIME_GET\\x10\\x06\\x12\\x14\\n\\x10\\x43ID_DEV_INFO_GET\\x10\\x07\\x12\\x16\\n\\x12\\x43ID_DEV_STATUS_GET\\x10\\x08\\x12\\x16\\n\\x12\\x43ID_DEV_CONFIG_SET\\x10\\t\\x12\\x16\\n\\x12\\x43ID_DEV_CONFIG_GET\\x10\\n\\x12\\x11\\n\\rCID_DFU_ENTER\\x10\\x0b\\x12\\x1c\\n\\x18\\x43ID_STREAMING_DATA_START\\x10\\x0c\\x12\\x1b\\n\\x17\\x43ID_STREAMING_DATA_STOP\\x10\\r\\x12\\x1e\\n\\x1a\\x43ID_AFE_SENSOR_SETTING_SET\\x10\\x0e\\x12\\x1e\\n\\x1a\\x43ID_AFE_SENSOR_SETTING_GET\\x10\\x0f\\x12\\x1a\\n\\x16\\x43ID_WLC_RUN_PARAMS_SET\\x10\\x10\\x12\\x1a\\n\\x16\\x43ID_WLC_RUN_PARAMS_GET\\x10\\x11\\x12\\x1a\\n\\x16\\x43ID_WLC_OEM_PARAMS_SET\\x10\\x12\\x12\\x1a\\n\\x16\\x43ID_WLC_OEM_PARAMS_GET\\x10\\x13\\x12\\x11\\n\\rCID_DEV_SLEEP\\x10\\x14\\x12\\x12\\n\\x0e\\x43ID_DEV_REINIT\\x10\\x15\\x12\\x19\\n\\x15\\x43ID_SENSOR_CONFIG_SET\\x10\\x16\\x12\\x19\\n\\x15\\x43ID_SENSOR_CONFIG_GET\\x10\\x17\\x12\\x15\\n\\x11\\x43ID_SPO2_HR_START\\x10\\x18\\x12\\x14\\n\\x10\\x43ID_SPO2_HR_STOP\\x10\\x19\\x12\\x16\\n\\x11\\x43ID_BLE_DTM_LE_TX\\x10\\xf8\\x01\\x12\\x1b\\n\\x16\\x43ID_BLE_DTM_LE_TX_RESP\\x10\\xf9\\x01\\x12\\x16\\n\\x11\\x43ID_BLE_DTM_LE_RX\\x10\\xfa\\x01\\x12\\x1b\\n\\x16\\x43ID_BLE_DTM_LE_RX_RESP\\x10\\xfb\\x01\\x12\\x1f\\n\\x1a\\x43ID_BLE_DTM_UNMODULATED_TX\\x10\\xfc\\x01\\x12$\\n\\x1f\\x43ID_BLE_DTM_UNMODULATED_TX_RESP\\x10\\xfd\\x01\\x12\\x1f\\n\\x1a\\x43ID_BLE_DTM_UNMODULATED_RX\\x10\\xfe\\x01\\x12$\\n\\x1f\\x43ID_BLE_DTM_UNMODULATED_RX_RESP\\x10\\xff\\x01*\\xcd\\x01\\n\\x0cResponseCode\\x12\\x12\\n\\x0eRC_UNSPECIFIED\\x10\\x00\\x12\\t\\n\\x05RC_OK\\x10\\x01\\x12\\x1a\\n\\x16RC_ERROR_UNIMPLEMENTED\\x10\\x02\\x12\\x17\\n\\x13RC_ERROR_CMD_FAILED\\x10\\x03\\x12\\x16\\n\\x12RC_ERROR_TIMED_OUT\\x10\\x04\\x12\\x11\\n\\rRC_ERROR_BUSY\\x10\\x05\\x12 \\n\\x1cRC_ERROR_INVALID_PACKET_TYPE\\x10\\x06\\x12\\x1c\\n\\x18RC_ERROR_INVALID_PAYLOAD\\x10\\x07*\\x8d\\x01\\n\\x0eNotificationId\\x12\\x13\\n\\x0fNID_UNSPECIFIED\\x10\\x00\\x12\\x10\\n\\x0cNID_LOG_DATA\\x10\\x01\\x12\\x1f\\n\\x1bNID_CHARGING_STATUS_CHANGED\\x10\\x02\\x12\\x1d\\n\\x19NID_BATTERY_LEVEL_CHANGED\\x10\\x03\\x12\\x14\\n\\x10NID_SPO2_HR_DATA\\x10\\x04*\\xeb\\x01\\n\\x0f\\x41\\x63kResponseCode\\x12\\x16\\n\\x12\\x41\\x43K_RC_UNSPECIFIED\\x10\\x00\\x12\\x0e\\n\\nACK_RC_ACK\\x10\\x01\\x12\\x1d\\n\\x19\\x41\\x43K_RC_NACK_UNIMPLEMENTED\\x10\\x02\\x12\\x1a\\n\\x16\\x41\\x43K_RC_NACK_CMD_FAILED\\x10\\x03\\x12\\x19\\n\\x15\\x41\\x43K_RC_NACK_TIMED_OUT\\x10\\x04\\x12\\x14\\n\\x10\\x41\\x43K_RC_NACK_BUSY\\x10\\x05\\x12#\\n\\x1f\\x41\\x43K_RC_NACK_INVALID_PACKET_TYPE\\x10\\x06\\x12\\x1f\\n\\x1b\\x41\\x43K_RC_NACK_INVALID_PAYLOAD\\x10\\x07*m\\n\\nSensorMode\\x12\\x0f\\n\\x0bSM_MODE_OFF\\x10\\x01\\x12\\x12\\n\\x0eSM_MODE_STREAM\\x10\\x02\\x12\\x1b\\n\\x17SM_MODE_RECORD_TO_FLASH\\x10\\x03\\x12\\x1d\\n\\x19SM_MODE_UPLOAD_FROM_FLASH\\x10\\x04')\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'brp_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n  DESCRIPTOR._options = None\n  _SPO2HRDATA.fields_by_name['spo2']._options = None\n  _SPO2HRDATA.fields_by_name['spo2']._serialized_options = b'\\020\\001'\n  _SPO2HRDATA.fields_by_name['hr']._options = None\n  _SPO2HRDATA.fields_by_name['hr']._serialized_options = b'\\020\\001'",
        "detail": "proto.brp_pb2",
        "documentation": {}
    },
    {
        "label": "DESCRIPTOR",
        "kind": 5,
        "importPath": "proto.brp_pb2",
        "description": "proto.brp_pb2",
        "peekOfCode": "DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\\n\\tbrp.proto\\x12\\x03\\x42RP\\\")\\n\\x0cProtocolInfo\\x12\\x19\\n\\x07version\\x18\\x01 \\x02(\\x05:\\x08\\x32\\x30\\x32\\x34\\x30\\x35\\x32\\x37\\\"\\xdf\\x01\\n\\x06Packet\\x12\\x0b\\n\\x03sid\\x18\\x01 \\x02(\\x04\\x12\\x1d\\n\\x04type\\x18\\x02 \\x02(\\x0e\\x32\\x0f.BRP.PacketType\\x12%\\n\\x07\\x63ommand\\x18\\x03 \\x01(\\x0b\\x32\\x12.BRP.CommandPacketH\\x00\\x12\\'\\n\\x08response\\x18\\x04 \\x01(\\x0b\\x32\\x13.BRP.ResponsePacketH\\x00\\x12/\\n\\x0cnotification\\x18\\x05 \\x01(\\x0b\\x32\\x17.BRP.NotificationPacketH\\x00\\x12\\x1d\\n\\x03\\x61\\x63k\\x18\\x06 \\x01(\\x0b\\x32\\x0e.BRP.AckPacketH\\x00\\x42\\t\\n\\x07payload\\\"\\xc3\\x02\\n\\rCommandPacket\\x12\\x1b\\n\\x03\\x63id\\x18\\x01 \\x02(\\x0e\\x32\\x0e.BRP.CommandId\\x12!\\n\\x07mem_set\\x18\\x02 \\x01(\\x0b\\x32\\x0e.BRP.CmdMemSetH\\x00\\x12!\\n\\x07mem_get\\x18\\x03 \\x01(\\x0b\\x32\\x0e.BRP.CmdMemGetH\\x00\\x12\\'\\n\\x0b\\x61\\x66\\x65_setting\\x18\\x04 \\x01(\\x0b\\x32\\x10.BRP.AfeSettingsH\\x00\\x12+\\n\\x0ewlc_run_params\\x18\\x05 \\x01(\\x0b\\x32\\x11.BRP.WlcRunParamsH\\x00\\x12+\\n\\x0ewlc_oem_params\\x18\\x06 \\x01(\\x0b\\x32\\x11.BRP.WlcOemParamsH\\x00\\x12\\x15\\n\\x0bsensor_type\\x18\\x07 \\x01(\\rH\\x00\\x12*\\n\\rsensor_config\\x18\\x08 \\x01(\\x0b\\x32\\x11.BRP.SensorConfigH\\x00\\x42\\t\\n\\x07payload\\\"\\xcf\\x02\\n\\x0eResponsePacket\\x12\\x1b\\n\\x03\\x63id\\x18\\x01 \\x02(\\x0e\\x32\\x0e.BRP.CommandId\\x12!\\n\\x06result\\x18\\x02 \\x02(\\x0e\\x32\\x11.BRP.ResponseCode\\x12*\\n\\rprotocol_info\\x18\\x04 \\x01(\\x0b\\x32\\x11.BRP.ProtocolInfoH\\x00\\x12!\\n\\x07mem_get\\x18\\x05 \\x01(\\x0b\\x32\\x0e.BRP.RspMemGetH\\x00\\x12 \\n\\x08\\x64\\x65v_info\\x18\\x06 \\x01(\\x0b\\x32\\x0c.BRP.DevInfoH\\x00\\x12\\'\\n\\x0b\\x61\\x66\\x65_setting\\x18\\x07 \\x01(\\x0b\\x32\\x10.BRP.AfeSettingsH\\x00\\x12+\\n\\x0ewlc_run_params\\x18\\x08 \\x01(\\x0b\\x32\\x11.BRP.WlcRunParamsH\\x00\\x12+\\n\\x0ewlc_oem_params\\x18\\t \\x01(\\x0b\\x32\\x11.BRP.WlcOemParamsH\\x00\\x42\\t\\n\\x07payload\\\"\\xbc\\x01\\n\\x12NotificationPacket\\x12 \\n\\x03nid\\x18\\x02 \\x02(\\x0e\\x32\\x13.BRP.NotificationId\\x12\\x0b\\n\\x03\\x61\\x63k\\x18\\x03 \\x02(\\x08\\x12\\x1b\\n\\x03log\\x18\\x04 \\x01(\\x0b\\x32\\x0c.BRP.NotiLogH\\x00\\x12\\x12\\n\\x08\\x63harging\\x18\\x05 \\x01(\\x08H\\x00\\x12\\x17\\n\\rbattery_level\\x18\\x06 \\x01(\\rH\\x00\\x12\\\"\\n\\x07spo2_hr\\x18\\x07 \\x01(\\x0b\\x32\\x0f.BRP.Spo2HrDataH\\x00\\x42\\t\\n\\x07payload\\\"S\\n\\tAckPacket\\x12 \\n\\x03nid\\x18\\x01 \\x02(\\x0e\\x32\\x13.BRP.NotificationId\\x12$\\n\\x06result\\x18\\x02 \\x02(\\x0e\\x32\\x14.BRP.AckResponseCode\\\"c\\n\\x07\\x44\\x65vInfo\\x12\\x15\\n\\rserial_number\\x18\\x01 \\x02(\\t\\x12\\x18\\n\\x10hardware_version\\x18\\x02 \\x02(\\t\\x12\\x18\\n\\x10\\x66irmware_version\\x18\\x03 \\x02(\\t\\x12\\r\\n\\x05model\\x18\\x04 \\x01(\\t\\\":\\n\\tCmdMemSet\\x12\\x0f\\n\\x07\\x61\\x64\\x64ress\\x18\\x01 \\x02(\\r\\x12\\x0e\\n\\x06length\\x18\\x02 \\x02(\\r\\x12\\x0c\\n\\x04\\x64\\x61ta\\x18\\x03 \\x02(\\x0c\\\",\\n\\tCmdMemGet\\x12\\x0f\\n\\x07\\x61\\x64\\x64ress\\x18\\x01 \\x02(\\r\\x12\\x0e\\n\\x06length\\x18\\x02 \\x02(\\r\\\"\\x19\\n\\tRspMemGet\\x12\\x0c\\n\\x04\\x64\\x61ta\\x18\\x01 \\x02(\\x0c\\\"\\x17\\n\\x07NotiLog\\x12\\x0c\\n\\x04\\x64\\x61ta\\x18\\x01 \\x01(\\x0c\\\"\\xb7\\t\\n\\x0b\\x41\\x66\\x65Settings\\x12\\x17\\n\\x0f\\x65\\x63g_sample_rate\\x18\\x01 \\x02(\\r\\x12\\x17\\n\\x0fppg_sample_rate\\x18\\x02 \\x02(\\r\\x12\\x1e\\n\\x16ppg_meas1_current_step\\x18\\x03 \\x02(\\r\\x12\\x1e\\n\\x16ppg_meas2_current_step\\x18\\x04 \\x02(\\r\\x12\\x19\\n\\x11ppg_meas1_current\\x18\\x05 \\x02(\\x02\\x12\\x19\\n\\x11ppg_meas2_current\\x18\\x06 \\x02(\\x02\\x12\\x17\\n\\x0f\\x65\\x63g_input_polar\\x18\\x07 \\x02(\\r\\x12\\x14\\n\\x0c\\x65\\x63g_pga_gain\\x18\\x08 \\x02(\\r\\x12\\x14\\n\\x0c\\x65\\x63g_ina_gain\\x18\\t \\x02(\\r\\x12\\x1a\\n\\x12\\x65\\x63g_auto_reco_mode\\x18\\n \\x02(\\r\\x12\\x1f\\n\\x17\\x65\\x63g_auto_fast_reco_mode\\x18\\x0b \\x02(\\r\\x12!\\n\\x19\\x65\\x63g_auto_fast_reco_thresh\\x18\\x0c \\x02(\\r\\x12\\x16\\n\\x0e\\x65\\x63g_rld_enable\\x18\\r \\x02(\\r\\x12\\x14\\n\\x0c\\x65\\x63g_rld_mode\\x18\\x0e \\x02(\\r\\x12 \\n\\x18\\x65\\x63g_rld_pos_input_enable\\x18\\x0f \\x02(\\r\\x12 \\n\\x18\\x65\\x63g_rld_neg_input_enable\\x18\\x10 \\x02(\\r\\x12\\x14\\n\\x0c\\x65\\x63g_rld_gain\\x18\\x11 \\x02(\\r\\x12\\x1e\\n\\x16\\x65\\x63g_rld_ex_res_connect\\x18\\x12 \\x02(\\r\\x12\\x1a\\n\\x12\\x65\\x63g_rld_select_ecg\\x18\\x13 \\x02(\\r\\x12\\x1c\\n\\x14ppg_meas1_inter_time\\x18\\x14 \\x02(\\r\\x12\\x1c\\n\\x14ppg_meas2_inter_time\\x18\\x15 \\x02(\\r\\x12\\x1d\\n\\x15ppg_meas1_pd_seltling\\x18\\x16 \\x02(\\r\\x12\\x1d\\n\\x15ppg_meas2_pd_seltling\\x18\\x17 \\x02(\\r\\x12\\x1e\\n\\x16ppg_meas1_led_seltling\\x18\\x18 \\x02(\\r\\x12\\x1e\\n\\x16ppg_meas2_led_seltling\\x18\\x19 \\x02(\\r\\x12\\x1d\\n\\x15ppg_meas1_ppg1_offset\\x18\\x1a \\x02(\\r\\x12\\x1d\\n\\x15ppg_meas2_ppg1_offset\\x18\\x1b \\x02(\\r\\x12\\x1d\\n\\x15ppg_meas1_ppg2_offset\\x18\\x1c \\x02(\\r\\x12\\x1d\\n\\x15ppg_meas2_ppg2_offset\\x18\\x1d \\x02(\\r\\x12\\x1e\\n\\x16ppg_meas1_sinc3_filter\\x18\\x1e \\x02(\\r\\x12\\x1e\\n\\x16ppg_meas2_sinc3_filter\\x18\\x1f \\x02(\\r\\x12\\x1c\\n\\x14ppg_meas1_alc_method\\x18  \\x02(\\r\\x12\\x1c\\n\\x14ppg_meas2_alc_method\\x18! \\x02(\\r\\x12\\x1e\\n\\x16ppg_meas1_filter_order\\x18\\\" \\x02(\\r\\x12\\x1e\\n\\x16ppg_meas2_filter_order\\x18# \\x02(\\r\\x12\\x19\\n\\x11ppg_meas1_ambient\\x18$ \\x02(\\r\\x12\\x19\\n\\x11ppg_meas2_ambient\\x18% \\x02(\\r\\x12\\x1f\\n\\x17ppg_pd1_photodiode_bias\\x18& \\x02(\\r\\x12\\x1a\\n\\x12ppg_proximity_mode\\x18\\' \\x02(\\r\\x12\\x1d\\n\\x15ppg_threshold_1_lower\\x18( \\x02(\\r\\x12\\x13\\n\\x0b\\x65\\x63g_ina_rge\\x18) \\x02(\\r\\\"\\xc8\\x01\\n\\x0cWlcRunParams\\x12\\x16\\n\\x0e\\x63harge_current\\x18\\x01 \\x02(\\r\\x12\\x18\\n\\x10recharge_voltage\\x18\\x02 \\x02(\\r\\x12\\x1b\\n\\x13termination_voltage\\x18\\x03 \\x02(\\r\\x12\\x17\\n\\x0ftrickle_voltage\\x18\\x04 \\x02(\\r\\x12\\x17\\n\\x0f\\x65nable_charging\\x18\\x05 \\x02(\\r\\x12\\x0f\\n\\x07wpt_req\\x18\\x06 \\x02(\\r\\x12\\x14\\n\\x0cwpt_duration\\x18\\x07 \\x02(\\r\\x12\\x10\\n\\x08\\x64\\x65tuning\\x18\\x08 \\x02(\\r\\\"\\xd0\\x07\\n\\x0cWlcOemParams\\x12\\x18\\n\\x10\\x62\\x63_i_charge_cold\\x18\\x01 \\x02(\\r\\x12\\x17\\n\\x0f\\x62\\x63_i_charge_hot\\x18\\x02 \\x02(\\r\\x12\\x11\\n\\tbc_v_term\\x18\\x03 \\x02(\\r\\x12\\x16\\n\\x0e\\x62\\x63_v_term_cold\\x18\\x04 \\x02(\\r\\x12\\x15\\n\\rbc_v_term_hot\\x18\\x05 \\x02(\\r\\x12\\x14\\n\\x0c\\x62\\x63_v_trickle\\x18\\x06 \\x02(\\r\\x12\\x15\\n\\rbc_v_recharge\\x18\\x07 \\x02(\\r\\x12\\x13\\n\\x0bvd_mcu_mode\\x18\\x08 \\x02(\\r\\x12\\x17\\n\\x0fi_sensor_thresh\\x18\\t \\x02(\\r\\x12\\x1c\\n\\x14\\x61\\x64j_wpt_duration_int\\x18\\n \\x02(\\r\\x12\\x1c\\n\\x14tcm_wpt_duration_int\\x18\\x0b \\x02(\\r\\x12\\x1c\\n\\x14\\x63\\x63m_wpt_duration_int\\x18\\x0c \\x02(\\r\\x12\\x1c\\n\\x14\\x63vm_wpt_duration_int\\x18\\r \\x02(\\r\\x12\\x12\\n\\ncap_wt_int\\x18\\x0e \\x02(\\r\\x12\\x14\\n\\x0cgpio0_config\\x18\\x0f \\x02(\\r\\x12\\x14\\n\\x0cgpio1_config\\x18\\x10 \\x02(\\r\\x12\\x16\\n\\x0e\\x62\\x63_uvlo_thresh\\x18\\x11 \\x02(\\r\\x12\\x13\\n\\x0bwpt_req_sel\\x18\\x12 \\x02(\\r\\x12\\x14\\n\\x0cirq_polarity\\x18\\x13 \\x02(\\r\\x12\\x19\\n\\x11nfc_resistive_mod\\x18\\x14 \\x02(\\r\\x12\\x19\\n\\x11nfc_resistive_set\\x18\\x15 \\x02(\\r\\x12\\x19\\n\\x11wpt_resistive_mod\\x18\\x16 \\x02(\\r\\x12\\x19\\n\\x11wpt_resistive_set\\x18\\x17 \\x02(\\r\\x12\\x10\\n\\x08ntc_mode\\x18\\x18 \\x02(\\r\\x12\\x17\\n\\x0f\\x62\\x63_i_charge_wpt\\x18\\x19 \\x02(\\r\\x12\\x17\\n\\x0f\\x62\\x63_i_charge_nfc\\x18\\x1a \\x02(\\r\\x12\\x11\\n\\tbc_i_term\\x18\\x1b \\x02(\\r\\x12\\x14\\n\\x0c\\x62\\x63_i_lim_sel\\x18\\x1c \\x02(\\r\\x12\\x1b\\n\\x13\\x62\\x63_i_lim_bat_enable\\x18\\x1d \\x02(\\r\\x12\\x18\\n\\x10\\x62\\x63_lo_bat_off_en\\x18\\x1e \\x02(\\r\\x12\\x11\\n\\tbc_enable\\x18\\x1f \\x02(\\r\\x12\\x13\\n\\x0bi2c_address\\x18  \\x02(\\r\\x12\\x13\\n\\x0btcm_timeout\\x18! \\x02(\\r\\x12\\x13\\n\\x0b\\x63\\x63m_timeout\\x18\\\" \\x02(\\r\\x12\\x13\\n\\x0b\\x63vm_timeout\\x18# \\x02(\\r\\x12\\x16\\n\\x0evddc_thres_low\\x18$ \\x02(\\r\\x12\\x1a\\n\\x12vd_bat_offset_high\\x18% \\x02(\\r\\x12\\x19\\n\\x11vd_bat_offset_low\\x18& \\x02(\\r\\x12\\x1a\\n\\x12\\x64\\x63_charging_enable\\x18\\' \\x02(\\r\\x12\\x13\\n\\x0boem_version\\x18( \\x02(\\r\\\"S\\n\\x0cSensorConfig\\x12$\\n\\x0bsensor_type\\x18\\x01 \\x01(\\x0e\\x32\\x0f.BRP.SensorType\\x12\\x1d\\n\\x04mode\\x18\\x02 \\x01(\\x0e\\x32\\x0f.BRP.SensorMode\\\".\\n\\nSpo2HrData\\x12\\x10\\n\\x04spo2\\x18\\x01 \\x03(\\rB\\x02\\x10\\x01\\x12\\x0e\\n\\x02hr\\x18\\x02 \\x03(\\rB\\x02\\x10\\x01*\\x8f\\x01\\n\\nPacketType\\x12\\x1b\\n\\x17PACKET_TYPE_UNSPECIFIED\\x10\\x00\\x12\\x17\\n\\x13PACKET_TYPE_COMMAND\\x10\\x01\\x12\\x18\\n\\x14PACKET_TYPE_RESPONSE\\x10\\x02\\x12\\x1c\\n\\x18PACKET_TYPE_NOTIFICATION\\x10\\x03\\x12\\x13\\n\\x0fPACKET_TYPE_ACK\\x10\\x04*a\\n\\nSensorType\\x12\\x13\\n\\x0fSENSOR_TYPE_PPG\\x10\\x01\\x12\\x13\\n\\x0fSENSOR_TYPE_ECG\\x10\\x02\\x12\\x13\\n\\x0fSENSOR_TYPE_IMU\\x10\\x04\\x12\\x14\\n\\x10SENSOR_TYPE_TEMP\\x10\\x08*\\xef\\x06\\n\\tCommandId\\x12\\x13\\n\\x0f\\x43ID_UNSPECIFIED\\x10\\x00\\x12\\x19\\n\\x15\\x43ID_PROTOCOL_INFO_GET\\x10\\x01\\x12\\x0f\\n\\x0b\\x43ID_MEM_SET\\x10\\x02\\x12\\x0f\\n\\x0b\\x43ID_MEM_GET\\x10\\x03\\x12\\x0e\\n\\nCID_REBOOT\\x10\\x04\\x12\\x10\\n\\x0c\\x43ID_TIME_SET\\x10\\x05\\x12\\x10\\n\\x0c\\x43ID_TIME_GET\\x10\\x06\\x12\\x14\\n\\x10\\x43ID_DEV_INFO_GET\\x10\\x07\\x12\\x16\\n\\x12\\x43ID_DEV_STATUS_GET\\x10\\x08\\x12\\x16\\n\\x12\\x43ID_DEV_CONFIG_SET\\x10\\t\\x12\\x16\\n\\x12\\x43ID_DEV_CONFIG_GET\\x10\\n\\x12\\x11\\n\\rCID_DFU_ENTER\\x10\\x0b\\x12\\x1c\\n\\x18\\x43ID_STREAMING_DATA_START\\x10\\x0c\\x12\\x1b\\n\\x17\\x43ID_STREAMING_DATA_STOP\\x10\\r\\x12\\x1e\\n\\x1a\\x43ID_AFE_SENSOR_SETTING_SET\\x10\\x0e\\x12\\x1e\\n\\x1a\\x43ID_AFE_SENSOR_SETTING_GET\\x10\\x0f\\x12\\x1a\\n\\x16\\x43ID_WLC_RUN_PARAMS_SET\\x10\\x10\\x12\\x1a\\n\\x16\\x43ID_WLC_RUN_PARAMS_GET\\x10\\x11\\x12\\x1a\\n\\x16\\x43ID_WLC_OEM_PARAMS_SET\\x10\\x12\\x12\\x1a\\n\\x16\\x43ID_WLC_OEM_PARAMS_GET\\x10\\x13\\x12\\x11\\n\\rCID_DEV_SLEEP\\x10\\x14\\x12\\x12\\n\\x0e\\x43ID_DEV_REINIT\\x10\\x15\\x12\\x19\\n\\x15\\x43ID_SENSOR_CONFIG_SET\\x10\\x16\\x12\\x19\\n\\x15\\x43ID_SENSOR_CONFIG_GET\\x10\\x17\\x12\\x15\\n\\x11\\x43ID_SPO2_HR_START\\x10\\x18\\x12\\x14\\n\\x10\\x43ID_SPO2_HR_STOP\\x10\\x19\\x12\\x16\\n\\x11\\x43ID_BLE_DTM_LE_TX\\x10\\xf8\\x01\\x12\\x1b\\n\\x16\\x43ID_BLE_DTM_LE_TX_RESP\\x10\\xf9\\x01\\x12\\x16\\n\\x11\\x43ID_BLE_DTM_LE_RX\\x10\\xfa\\x01\\x12\\x1b\\n\\x16\\x43ID_BLE_DTM_LE_RX_RESP\\x10\\xfb\\x01\\x12\\x1f\\n\\x1a\\x43ID_BLE_DTM_UNMODULATED_TX\\x10\\xfc\\x01\\x12$\\n\\x1f\\x43ID_BLE_DTM_UNMODULATED_TX_RESP\\x10\\xfd\\x01\\x12\\x1f\\n\\x1a\\x43ID_BLE_DTM_UNMODULATED_RX\\x10\\xfe\\x01\\x12$\\n\\x1f\\x43ID_BLE_DTM_UNMODULATED_RX_RESP\\x10\\xff\\x01*\\xcd\\x01\\n\\x0cResponseCode\\x12\\x12\\n\\x0eRC_UNSPECIFIED\\x10\\x00\\x12\\t\\n\\x05RC_OK\\x10\\x01\\x12\\x1a\\n\\x16RC_ERROR_UNIMPLEMENTED\\x10\\x02\\x12\\x17\\n\\x13RC_ERROR_CMD_FAILED\\x10\\x03\\x12\\x16\\n\\x12RC_ERROR_TIMED_OUT\\x10\\x04\\x12\\x11\\n\\rRC_ERROR_BUSY\\x10\\x05\\x12 \\n\\x1cRC_ERROR_INVALID_PACKET_TYPE\\x10\\x06\\x12\\x1c\\n\\x18RC_ERROR_INVALID_PAYLOAD\\x10\\x07*\\x8d\\x01\\n\\x0eNotificationId\\x12\\x13\\n\\x0fNID_UNSPECIFIED\\x10\\x00\\x12\\x10\\n\\x0cNID_LOG_DATA\\x10\\x01\\x12\\x1f\\n\\x1bNID_CHARGING_STATUS_CHANGED\\x10\\x02\\x12\\x1d\\n\\x19NID_BATTERY_LEVEL_CHANGED\\x10\\x03\\x12\\x14\\n\\x10NID_SPO2_HR_DATA\\x10\\x04*\\xeb\\x01\\n\\x0f\\x41\\x63kResponseCode\\x12\\x16\\n\\x12\\x41\\x43K_RC_UNSPECIFIED\\x10\\x00\\x12\\x0e\\n\\nACK_RC_ACK\\x10\\x01\\x12\\x1d\\n\\x19\\x41\\x43K_RC_NACK_UNIMPLEMENTED\\x10\\x02\\x12\\x1a\\n\\x16\\x41\\x43K_RC_NACK_CMD_FAILED\\x10\\x03\\x12\\x19\\n\\x15\\x41\\x43K_RC_NACK_TIMED_OUT\\x10\\x04\\x12\\x14\\n\\x10\\x41\\x43K_RC_NACK_BUSY\\x10\\x05\\x12#\\n\\x1f\\x41\\x43K_RC_NACK_INVALID_PACKET_TYPE\\x10\\x06\\x12\\x1f\\n\\x1b\\x41\\x43K_RC_NACK_INVALID_PAYLOAD\\x10\\x07*m\\n\\nSensorMode\\x12\\x0f\\n\\x0bSM_MODE_OFF\\x10\\x01\\x12\\x12\\n\\x0eSM_MODE_STREAM\\x10\\x02\\x12\\x1b\\n\\x17SM_MODE_RECORD_TO_FLASH\\x10\\x03\\x12\\x1d\\n\\x19SM_MODE_UPLOAD_FROM_FLASH\\x10\\x04')\n_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())\n_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'brp_pb2', globals())\nif _descriptor._USE_C_DESCRIPTORS == False:\n  DESCRIPTOR._options = None\n  _SPO2HRDATA.fields_by_name['spo2']._options = None\n  _SPO2HRDATA.fields_by_name['spo2']._serialized_options = b'\\020\\001'\n  _SPO2HRDATA.fields_by_name['hr']._options = None\n  _SPO2HRDATA.fields_by_name['hr']._serialized_options = b'\\020\\001'\n  _PACKETTYPE._serialized_start=4012",
        "detail": "proto.brp_pb2",
        "documentation": {}
    },
    {
        "label": "Protocol",
        "kind": 6,
        "importPath": "proto.brp_protocol",
        "description": "proto.brp_protocol",
        "peekOfCode": "class Protocol:\n    PACKET_TYPE_AFE_DATA = 0xA0\n    PACKET_TYPE_IMU_DATA = 0xA1\n    PACKET_TYPE_TEMPERATURE_DATA = 0xA2\n    PACKET_TYPE_LOG_DATA = 0xA3\n    PACKET_TYPE_POWER_DATA = 0xA4\n    PACKET_TYPE_SELF_TEST_DATA   = 0xA5\n    def __init__(self, debug=False):\n        self.debug = debug\n        self.log = logging.getLogger(__name__)",
        "detail": "proto.brp_protocol",
        "documentation": {}
    },
    {
        "label": "BioRingTool",
        "kind": 6,
        "importPath": "bioring_tool",
        "description": "bioring_tool",
        "peekOfCode": "class BioRingTool(CoreHandlerCallBack):\n    def __init__(self):\n        self.core_handler = CoreHandler(self)\n        app = QApplication([])\n        window = QTGuideWindow()\n        window.scanBtn.clicked.connect(self.start_scan)\n        window.connectBtn.clicked.connect(self.connect)\n        window.disconnectBtn.clicked.connect(self.disconnect)\n        window.getInfoBtn.clicked.connect(self.get_device_info)\n        window.start_live_acc.clicked.connect(self.start_live_acc_data)",
        "detail": "bioring_tool",
        "documentation": {}
    },
    {
        "label": "BLEConnectionStatus",
        "kind": 6,
        "importPath": "ble_manager_old",
        "description": "ble_manager_old",
        "peekOfCode": "class BLEConnectionStatus(Enum):\n    INIT = 0\n    CONNECTING = 1\n    CONNECTED = 2\n    DISCONNECTED = 3\nclass BLEEvent(Enum):\n    BLE_EVENT_DISCONNECT = 0\n    BLE_EVENT_START_NOTIFY = 1\n    BLE_EVENT_STOP_NOTIFY = 2\n    BLE_EVENT_WRITE = 3",
        "detail": "ble_manager_old",
        "documentation": {}
    },
    {
        "label": "BLEEvent",
        "kind": 6,
        "importPath": "ble_manager_old",
        "description": "ble_manager_old",
        "peekOfCode": "class BLEEvent(Enum):\n    BLE_EVENT_DISCONNECT = 0\n    BLE_EVENT_START_NOTIFY = 1\n    BLE_EVENT_STOP_NOTIFY = 2\n    BLE_EVENT_WRITE = 3\nclass BLEManagerOld:\n    def __init__(self, debug=False):\n        self.addr = \"\"\n        self.event_queue = queue.Queue()\n        self.conn_status = BLEConnectionStatus.INIT",
        "detail": "ble_manager_old",
        "documentation": {}
    },
    {
        "label": "BLEManagerOld",
        "kind": 6,
        "importPath": "ble_manager_old",
        "description": "ble_manager_old",
        "peekOfCode": "class BLEManagerOld:\n    def __init__(self, debug=False):\n        self.addr = \"\"\n        self.event_queue = queue.Queue()\n        self.conn_status = BLEConnectionStatus.INIT\n        self.conn_timeout = False\n        if platform.system() == \"Darwin\":  # macOS\n            self.use_bdaddr = False\n        elif platform.system() == \"Windows\":  # Windows\n            self.use_bdaddr = True",
        "detail": "ble_manager_old",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def main():\n    tool = BioRingTool()\nif(__name__ == \"__main__\"):\n    main()",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "QTGuideWindow",
        "kind": 6,
        "importPath": "qt_gui",
        "description": "qt_gui",
        "peekOfCode": "class QTGuideWindow(QMainWindow):\n    def __init__(self):\n        super().__init__()\n        self.setWindowTitle(\"Tool hack Lien Minh\")\n        self.setMinimumSize(400,400)\n        parentLayout = QVBoxLayout()\n        self.label1 = QLabel(\"         Máy tính của bạn đã bị hack\")\n        self.scanBtn = QPushButton(\"Scan BLE\")\n        self.connectBtn = QPushButton(\"Connect\")\n        self.disconnectBtn = QPushButton(\"Disconnect\")",
        "detail": "qt_gui",
        "documentation": {}
    }
]